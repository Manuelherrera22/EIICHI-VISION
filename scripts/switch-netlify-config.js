/**
 * Script para alternar entre configuraciones de Netlify
 * Permite cambiar entre build con ofuscaci√≥n y build simple
 */

const fs = require('fs');
const path = require('path');

const configs = {
  simple: 'netlify-simple.toml',
  obfuscated: 'netlify.toml'
};

const currentConfig = process.argv[2];

if (!currentConfig || !configs[currentConfig]) {
  console.log('üîß Script para alternar configuraciones de Netlify\n');
  console.log('Uso: node scripts/switch-netlify-config.js [simple|obfuscated]\n');
  console.log('Configuraciones disponibles:');
  console.log('  simple     - Build est√°ndar sin ofuscaci√≥n (recomendado para deploy)');
  console.log('  obfuscated - Build con ofuscaci√≥n (puede causar problemas)\n');
  console.log('Ejemplo: node scripts/switch-netlify-config.js simple');
  process.exit(1);
}

const sourceFile = configs[currentConfig];
const targetFile = 'netlify.toml';

try {
  // Leer archivo de configuraci√≥n
  const configContent = fs.readFileSync(sourceFile, 'utf8');
  
  // Escribir como netlify.toml principal
  fs.writeFileSync(targetFile, configContent);
  
  console.log(`‚úÖ Configuraci√≥n cambiada a: ${currentConfig}`);
  console.log(`üìÅ Archivo activo: ${targetFile}`);
  console.log(`üìÑ Fuente: ${sourceFile}`);
  
  if (currentConfig === 'simple') {
    console.log('\nüöÄ Configuraci√≥n simple activada:');
    console.log('   - Build est√°ndar sin ofuscaci√≥n');
    console.log('   - M√°s estable para deploy');
    console.log('   - Recomendado para producci√≥n');
  } else if (currentConfig === 'obfuscated') {
    console.log('\nüîí Configuraci√≥n con ofuscaci√≥n activada:');
    console.log('   - Build con ofuscaci√≥n de c√≥digo');
    console.log('   - Puede causar problemas en deploy');
    console.log('   - Solo para testing local');
  }
  
  console.log('\nüìã Pr√≥ximos pasos:');
  console.log('1. Hacer commit de los cambios');
  console.log('2. Push a GitHub');
  console.log('3. Netlify se redeplegar√° autom√°ticamente');
  
} catch (error) {
  console.error('‚ùå Error al cambiar configuraci√≥n:', error.message);
  process.exit(1);
}
